{"version":3,"sources":["js/data.js","js/refs.js","js/index.js"],"names":["preview","original","description","galleryContainer","document","querySelector","modal","closeModalBtn","modalContentImg","refs","createItems","array","map","arrayElement","join","galleryItems","data","openImage","element","classList","add","closeImage","remove","setImageSrcAlt","src","alt","closeModalByClick","e","target","contains","nodeName","closeModalByKey","code","insertAdjacentHTML","addEventListener","dataset","fullimage","window","removeEventListener","imagesArray","currentImageIndex","indexOf","length"],"mappings":"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","file":"js.17fa499d.js","sourceRoot":"../src","sourcesContent":["export default [\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n\t\tdescription: 'Hokkaido Flower',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n\t\tdescription: 'Container Haulage Freight',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n\t\tdescription: 'Aerial Beach View',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n\t\tdescription: 'Flower Blooms',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n\t\tdescription: 'Alpine Mountains',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n\t\tdescription: 'Mountain Lake Sailing',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n\t\tdescription: 'Alpine Spring Meadows',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n\t\tdescription: 'Nature Landscape',\n\t},\n\t{\n\t\tpreview:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n\t\toriginal:\n\t\t\t'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n\t\tdescription: 'Lighthouse Coast Sea',\n\t},\n];\n","export default {\n\tgalleryContainer: document.querySelector(`.js-gallery`),\n\tmodal: document.querySelector(`.js-lightbox`),\n\tcloseModalBtn: document.querySelector(`button[data-action=\"close-lightbox\"]`),\n\tmodalContentImg: document.querySelector(`.lightbox__image`),\n};\n","// Imports block\nimport data from './data.js';\nimport refs from './refs.js';\n\n// ======= creating of markup and modal \"open\" and \"close\" actions  =======\n\n// destructurizes array for quick access to variables\nconst { galleryContainer, modal, closeModalBtn, modalContentImg } = refs;\n\n// creates markup string from data array\nfunction createItems(array) {\n\treturn array\n\t\t.map((arrayElement) => {\n\t\t\tconst { preview, original, description } = arrayElement;\n\n\t\t\treturn `\n            <li class=\"gallery__item\">\n               <div class=\"gallery__link\">\n                  <img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" data-fullimage=\"${original}\">\n               </div>\n            </li>\n            `;\n\t\t})\n\t\t.join('');\n}\n\nconst galleryItems = createItems(data);\n\n// inserts markup in DOM\ngalleryContainer.insertAdjacentHTML('afterbegin', galleryItems);\n\n// declares open image functon\nfunction openImage(element) {\n\telement.classList.add(`is-open`);\n}\n\n// declares close image function\nfunction closeImage(element) {\n\telement.classList.remove(`is-open`);\n}\n\n// declares setter function for the modal image\nfunction setImageSrcAlt(src, alt) {\n\tmodalContentImg.src = src;\n\tmodalContentImg.alt = alt;\n}\n\n// inserts the \"hi-res image\" src attribute of opened thumbnail item\ngalleryContainer.addEventListener(`click`, (e) => {\n\tif (e.target.nodeName === `IMG`) {\n\t\topenImage(modal);\n\t\tsetImageSrcAlt(e.target.dataset.fullimage, e.target.alt); // inserts image src and alt attributes in the DOM\n\t}\n});\n\n// creates event listener that accepts CloseModalByClick callback function\nmodal.addEventListener(`click`, closeModalByClick);\n\nfunction closeModalByClick(e) {\n\tif (\n\t\te.target.classList.contains(`lightbox__overlay`) ||\n\t\te.target.nodeName === `BUTTON`\n\t) {\n\t\tcloseImage(modal);\n\t\tsetImageSrcAlt('', ''); // resets img and src attributes to empty string to avoid first load of previously opened image;\n\t}\n}\n\n// creates event listener that accepts CloseModalByKey callback function\nwindow.addEventListener(`keydown`, closeModalByKey);\n\nfunction closeModalByKey(e) {\n\tif (e.code === `Escape` && modal.classList.contains(`is-open`)) {\n\t\tcloseImage(modal);\n\t}\n}\n\n// assignment of event listener to closeModalBtn\ncloseModalBtn.addEventListener(`click`, closeModalByClick);\n\n// removes event listeners from modal and window when the modal window is closed\nif (modal.classList.contains(`is-open`)) {\n\twindow.removeEventListener(`keydown`, closeModalByKey);\n\tmodal.removeEventListener(`click`, closeModalByClick);\n}\n\n// ======= arrow navigation =======\n\n// creates array of links for hi-res images\nconst imagesArray = data.map((element) => {\n\treturn element.original;\n});\n\n// assignment of event listeners to ArrowLeft and ArrowRight\nwindow.addEventListener(`keydown`, (e) => {\n\tlet currentImageIndex;\n\n\tif (e.code === `ArrowRight` && modal.classList.contains(`is-open`)) {\n\t\tcurrentImageIndex = imagesArray.indexOf(modalContentImg.src);\n\t\tmodalContentImg.src = imagesArray[currentImageIndex + 1];\n\n\t\t// checks if the current image from an array is the first available one and on ArrowLeft click restarts the order from the end of the array\n\t\tif (currentImageIndex === imagesArray.length - 1) {\n\t\t\tcurrentImageIndex = 0;\n\t\t\tmodalContentImg.src = imagesArray[currentImageIndex];\n\t\t}\n\t} else if (e.code === `ArrowLeft` && modal.classList.contains(`is-open`)) {\n\t\tcurrentImageIndex = imagesArray.indexOf(modalContentImg.src);\n\t\tmodalContentImg.src = imagesArray[currentImageIndex - 1];\n\n\t\t// checks if the current image from an array is actually the last available one and resets the order for the next image on ArrowRight click to start it from the very beginning\n\t\tif (currentImageIndex === 0) {\n\t\t\tcurrentImageIndex = imagesArray.length - 1;\n\t\t\tmodalContentImg.src = imagesArray[currentImageIndex];\n\t\t}\n\t}\n});\n"]}